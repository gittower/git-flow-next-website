---
import { getCollection } from 'astro:content';
import DocsLayout from '../../layouts/DocsLayout.astro';

// Generate all paths at build time
export async function getStaticPaths() {
  const docs = await getCollection('docs');

  // Sort docs by order property
  const sortedDocs = docs.sort((a, b) => {
    // Default to a high number if order is not specified
    const orderA = a.data.order ?? 999;
    const orderB = b.data.order ?? 999;
    return orderA - orderB;
  });

  return sortedDocs.map((doc, index) => {
    const nextDoc = sortedDocs[index + 1] ? { ...sortedDocs[index + 1], slug: `/docs/${sortedDocs[index + 1].slug}` } : null;
    const prevDoc = sortedDocs[index - 1] ? { ...sortedDocs[index - 1], slug: `/docs/${sortedDocs[index - 1].slug}` } : null;

    return {
      params: { slug: doc.slug },
      props: { doc, nextDoc, prevDoc },
    };
  });
}

const { doc, nextDoc, prevDoc } = Astro.props;
const { Content, headings } = await doc.render();

// Extract headings for table of contents
const h2Headings = headings
  .filter(heading => heading.depth === 2)
  .map(({ slug, text }) => ({ slug, text }));
---

<DocsLayout
  title={doc.data.title}
  description={doc.data.description}
  headings={h2Headings}
  nextDoc={nextDoc}
  prevDoc={prevDoc}
>
  <article>
    <div class="content">
      <Content />
    </div>
  </article>
</DocsLayout>
