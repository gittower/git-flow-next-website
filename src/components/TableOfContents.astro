---
// TableOfContents.astro - Server-side TOC generation
const { headings, title } = Astro.props;
---

{headings && headings.length > 0 ? (
  <div class="table-of-contents">
    <h3>{title}</h3>
    <ul id="toc-list">
      {headings.map(heading => (
        <li data-heading-id={heading.slug}>
          <a href={`#${heading.slug}`}>{heading.text}</a>
        </li>
      ))}
    </ul>
  </div>
) : null}

<script>
  // Minimal client-side script just for scroll highlighting
  document.addEventListener('DOMContentLoaded', () => {
    const tocItems = document.querySelectorAll('#toc-list li');
    const headingElements = Array.from(document.querySelectorAll('.blog-post h2[id]'));

    if (tocItems.length === 0 || headingElements.length === 0) return;

    // Simple active heading tracking
    function updateActiveHeading() {
      const scrollPosition = window.scrollY + 100; // Small offset

      let activeHeading = headingElements[0];

      // Find current heading
      for (const heading of headingElements) {
        if (heading.offsetTop <= scrollPosition) {
          activeHeading = heading;
        } else {
          break;
        }
      }

      // Remove active class from all items
      tocItems.forEach(item => item.classList.remove('active'));

      // Add active class to current item
      const activeItem = document.querySelector(`[data-heading-id="${activeHeading.id}"]`);
      if (activeItem) activeItem.classList.add('active');
    }

    // Update on scroll
    window.addEventListener('scroll', updateActiveHeading);

    // Initial update
    updateActiveHeading();
  });
</script>
