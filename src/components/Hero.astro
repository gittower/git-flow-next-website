---
import { Image, getImage } from 'astro:assets';
import heroBg from '../assets/hero-bg.png';
import gitFlowVideo from '../assets/git-flow-hero.mp4';

const optimizedHeroBgWebP = await getImage({
  src: heroBg,
  format: 'webp',
  quality: 80
});

const optimizedHeroBgJpg = await getImage({
  src: heroBg,
  format: 'png'
});
---

<section data-webp-bg={optimizedHeroBgWebP.src} data-fallback-bg={optimizedHeroBgJpg.src}>
  <h1>Your favorite Git workflow.<br/>Reimagined.</h1>
  <div class="hero-video">
    <video
      src={gitFlowVideo}
      autoplay
      loop
      muted
      playsinline
      width="1200"
      height="600"
    />
  </div>
  <div class="copy-command">
    <div class="command-wrapper">
      <code id="command">brew install git-flow-next</code>
      <button id="copyBtn" aria-label="Copy to clipboard">
        <div class="icon-container">
          <svg id="copyIcon" class="icon" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <g opacity="0.5">
          <path d="M9 15C9 12.1716 9 10.7574 9.87868 9.87868C10.7574 9 12.1716 9 15 9H16C18.8284 9 20.2426 9 21.1213 9.87868C22 10.7574 22 12.1716 22 15V16C22 18.8284 22 20.2426 21.1213 21.1213C20.2426 22 18.8284 22 16 22H15C12.1716 22 10.7574 22 9.87868 21.1213C9 20.2426 9 18.8284 9 16V15Z" stroke="#AEEA94" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          <path d="M16.9999 9C16.9975 6.04291 16.9528 4.51121 16.092 3.46243C15.9258 3.25989 15.7401 3.07418 15.5376 2.90796C14.4312 2 12.7875 2 9.5 2C6.21252 2 4.56878 2 3.46243 2.90796C3.25989 3.07417 3.07418 3.25989 2.90796 3.46243C2 4.56878 2 6.21252 2 9.5C2 12.7875 2 14.4312 2.90796 15.5376C3.07417 15.7401 3.25989 15.9258 3.46243 16.092C4.51121 16.9528 6.04291 16.9975 9 16.9999" stroke="#AEEA94" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
          </g>
          </svg>
          <svg id="tickIcon" class="icon hidden" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M20 6L9 17L4 12" stroke="#AEEA94" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
          </svg>
        </div>
      </button>
    </div>
  </div>
  <div class="other-options">
    <a href="/docs/installation">Other installation options</a>
  </div>
</section>

<style>
  section {
    text-align: center;
    padding-top: 5rem;
    @media (min-width: 768px) {
      padding-top: 7rem;
    }
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    width: 100%;
    background-image: var(--fallback-bg);
  }
  @supports (background-image: url('.webp')) {
    section {
      background-image: var(--webp-bg);
    }
  }
  h1 {
    font-weight: 700;
    font-size: 2.5rem;
    padding-bottom: 2.5rem;
    line-height: 130%;
    text-shadow: 0px 4px 36px #B518B5;
    color: var(--main-white);
    @media (min-width: 768px) {
      font-size: 3.25rem;
      padding-bottom: 3rem;
    }
    @media (min-width: 1024px) {
      font-size: 4.375rem;
      padding-bottom: 3.5rem;
    }
  }
  .hero-video {
    padding: 0 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    video {
      width: 100%;
      max-width: 800px;
      height: auto;
      border-radius: 10px;
      box-shadow: 0 4px 36px rgba(181, 24, 181, 0.3);
    }
  }
  .copy-command {
    display: inline-block;
    margin-top: 3.5rem;
    background: #4635B133;
    padding: 1rem;
    border-radius: 10px;
    color: var(--main-green);
    font-weight: 700;
  }
  .command-wrapper{
    display: flex;
    place-content: center;
    line-height: 1.5rem;
    :hover {
      cursor: pointer;
    }
    button {
      margin-left: .5rem;
      background: transparent;
      border: 0;
    }
    code {
      background: none;
    }
  }
  .icon-container {
    position: relative;
    width: 24px;
    height: 24px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .icon {
    transition: opacity 0.3s ease-in-out;
    opacity: 1;
    position: absolute;
    top: 0;
    left: 0;
  }
  .hidden {
    opacity: 0;
  }
  .other-options {
    padding-top: 1rem;
    padding-bottom: 3rem;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Set the background images from data attributes
    const section = document.querySelector('section');
    if (section) {
      section.style.setProperty('--webp-bg', `url(${section.dataset.webpBg})`);
      section.style.setProperty('--fallback-bg', `url(${section.dataset.fallbackBg})`);
    }

    // Copy installation instructions to clipboard
    const commandWrapper = document.querySelector('.command-wrapper');
    const command = document.getElementById('command');
    const copyIcon = document.getElementById('copyIcon');
    const tickIcon = document.getElementById('tickIcon');

    const copyToClipboard = async () => {
      try {
        await navigator.clipboard.writeText(command.textContent);

        copyIcon.classList.add('hidden');
        tickIcon.classList.remove('hidden');

        setTimeout(() => {
          copyIcon.classList.remove('hidden');
          tickIcon.classList.add('hidden');
        }, 3000);
      } catch (err) {
        console.error('Failed to copy: ', err);
      }
    };

    commandWrapper.addEventListener('click', copyToClipboard);

    document.getElementById('copyBtn').addEventListener('click', (e) => {
      e.stopPropagation();
      copyToClipboard();
    });
  });
</script>
